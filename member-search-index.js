memberSearchIndex = [{"p":"micycle.pgs.commons","c":"IncrementalTinDual.DualEdge","l":"a"},{"p":"micycle.pgs.commons","c":"PEdge","l":"a"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"area(PShape)","url":"area(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual.DualEdge","l":"b"},{"p":"micycle.pgs.commons","c":"PEdge","l":"b"},{"p":"micycle.pgs","c":"PGS_Contour.OffsetStyle","l":"BEVEL"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"buffer(PShape, double)","url":"buffer(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"centroid(PShape)","url":"centroid(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"centroidQuadrangulation(IIncrementalTin, boolean)","url":"centroidQuadrangulation(org.tinfour.common.IIncrementalTin,boolean)"},{"p":"micycle.pgs.commons","c":"ChaikinCut","l":"chaikin(PShape, float, int)","url":"chaikin(processing.core.PShape,float,int)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"chaikinCut(PShape, double, int)","url":"chaikinCut(processing.core.PShape,double,int)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"circularity(PShape)","url":"circularity(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"closestPoint(PShape, PVector)","url":"closestPoint(processing.core.PShape,processing.core.PVector)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"closestPointPair(Collection<PVector>)","url":"closestPointPair(java.util.Collection)"},{"p":"micycle.pgs.commons","c":"ClosestPointPair","l":"ClosestPointPair(Collection<PVector>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"closestPoints(PShape, PVector)","url":"closestPoints(processing.core.PShape,processing.core.PVector)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"COARSE"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorMesh(Collection<PShape>, PGS_Coloring.ColoringAlgorithm)","url":"colorMesh(java.util.Collection,micycle.pgs.PGS_Coloring.ColoringAlgorithm)"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorMesh(PShape, PGS_Coloring.ColoringAlgorithm, int[])","url":"colorMesh(processing.core.PShape,micycle.pgs.PGS_Coloring.ColoringAlgorithm,int[])"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorMesh(PShape, PGS_Coloring.ColoringAlgorithm, String[])","url":"colorMesh(processing.core.PShape,micycle.pgs.PGS_Coloring.ColoringAlgorithm,java.lang.String[])"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorMesh(PShape, PGS_Coloring.ColoringAlgorithm)","url":"colorMesh(processing.core.PShape,micycle.pgs.PGS_Coloring.ColoringAlgorithm)"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorNonMesh(PShape, PGS_Coloring.ColoringAlgorithm, int[])","url":"colorNonMesh(processing.core.PShape,micycle.pgs.PGS_Coloring.ColoringAlgorithm,int[])"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorNonMesh(PShape, PGS_Coloring.ColoringAlgorithm, String[])","url":"colorNonMesh(processing.core.PShape,micycle.pgs.PGS_Coloring.ColoringAlgorithm,java.lang.String[])"},{"p":"micycle.pgs","c":"PGS_Coloring","l":"colorNonMesh(PShape, PGS_Coloring.ColoringAlgorithm)","url":"colorNonMesh(processing.core.PShape,micycle.pgs.PGS_Coloring.ColoringAlgorithm)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"complement(PShape, double, double)","url":"complement(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"concaveHull2(List<PVector>, double)","url":"concaveHull2(java.util.List,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"concaveHullBFS(List<PVector>, double)","url":"concaveHullBFS(java.util.List,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"concaveHullDFS(List<PVector>, double)","url":"concaveHullDFS(java.util.List,double)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"contains(PShape, PShape)","url":"contains(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"containsAllPoints(PShape, Collection<PVector>)","url":"containsAllPoints(processing.core.PShape,java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"containsPoint(PShape, PVector)","url":"containsPoint(processing.core.PShape,processing.core.PVector)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"containsPoints(PShape, Collection<PVector>)","url":"containsPoints(processing.core.PShape,java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"convexHull(List<PShape>)","url":"convexHull(java.util.List)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"convexHull(PShape...)","url":"convexHull(processing.core.PShape...)"},{"p":"micycle.pgs.commons","c":"PEdge","l":"copy()"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"copy(PShape)","url":"copy(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createArc(double, double, double, double, double, double)","url":"createArc(double,double,double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createFermatSpiral(double, double, double, double)","url":"createFermatSpiral(double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createHeart(double, double, double)","url":"createHeart(double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createLinearSpiral(double, double, double, double)","url":"createLinearSpiral(double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createRandomPolygon(int, double, double)","url":"createRandomPolygon(int,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createRandomPolygonExact(int, double, double)","url":"createRandomPolygonExact(int,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createRing(double, double, double, double, double, double)","url":"createRing(double,double,double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createRing(double, double, double, double)","url":"createRing(double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createSierpinskiCurve(double, double, double, int)","url":"createSierpinskiCurve(double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createStar(double, double, int, double, double, double)","url":"createStar(double,double,int,double,double,double)"},{"p":"micycle.pgs.commons","c":"Star","l":"createStarShape(double, double, double, double, int, double)","url":"createStarShape(double,double,double,double,int,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createSupercircle(double, double, double, double, double)","url":"createSupercircle(double,double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Construction","l":"createSuperShape(double, double, double, double, double, double, double)","url":"createSuperShape(double,double,double,double,double,double,double)"},{"p":"micycle.pgs.commons","c":"PolygonDecomposition","l":"decompose(Polygon)","url":"decompose(org.locationtech.jts.geom.Polygon)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulation(Collection<PVector>)","url":"delaunayTriangulation(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulation(PShape, Collection<PVector>, boolean, int, boolean)","url":"delaunayTriangulation(processing.core.PShape,java.util.Collection,boolean,int,boolean)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulation(PShape)","url":"delaunayTriangulation(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulationMesh(Collection<PVector>)","url":"delaunayTriangulationMesh(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulationMesh(PShape, Collection<PVector>, boolean, int, boolean)","url":"delaunayTriangulationMesh(processing.core.PShape,java.util.Collection,boolean,int,boolean)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulationMesh(PShape)","url":"delaunayTriangulationMesh(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulationPoints(Collection<PVector>)","url":"delaunayTriangulationPoints(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulationPoints(PShape, Collection<PVector>, boolean, int, boolean)","url":"delaunayTriangulationPoints(processing.core.PShape,java.util.Collection,boolean,int,boolean)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"delaunayTriangulationPoints(PShape)","url":"delaunayTriangulationPoints(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"densify(PShape, double)","url":"densify(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"density(PShape)","url":"density(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"diameter(PShape)","url":"diameter(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"disableAllFill(PShape)","url":"disableAllFill(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"disableAllStroke(PShape)","url":"disableAllStroke(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"distance(PShape, PShape)","url":"distance(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"RectangularSubdivision","l":"divide()"},{"p":"micycle.pgs.commons","c":"TriangleSubdivision","l":"divide()"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"doyleSpiral(double, double, int, int, double)","url":"doyleSpiral(double,double,int,int,double)"},{"p":"micycle.pgs.commons","c":"DoyleSpiral","l":"DoyleSpiral(int, int, double)","url":"%3Cinit%3E(int,int,double)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"DSATUR"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"dualFaces(IIncrementalTin)","url":"dualFaces(org.tinfour.common.IIncrementalTin)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"earCutTriangulation(List<PVector>)","url":"earCutTriangulation(java.util.List)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"earCutTriangulation(PShape)","url":"earCutTriangulation(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"edgeCollapseQuadrangulation(IIncrementalTin, boolean)","url":"edgeCollapseQuadrangulation(org.tinfour.common.IIncrementalTin,boolean)"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual","l":"edgeDuals"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual","l":"edges"},{"p":"micycle.pgs.commons","c":"FarthestPointPair","l":"either()"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"envelope(PShape)","url":"envelope(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual.DualEdge","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"micycle.pgs.commons","c":"PEdge","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"erosionDilation(PShape, double)","url":"erosionDilation(processing.core.PShape,double)"},{"p":"micycle.pgs.commons","c":"ClosestPointPair","l":"execute()"},{"p":"micycle.pgs","c":"PGS_Processing","l":"extractPerimeter(PShape, double, double)","url":"extractPerimeter(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"farthestPointPair(Collection<PVector>)","url":"farthestPointPair(java.util.Collection)"},{"p":"micycle.pgs.commons","c":"FarthestPointPair","l":"FarthestPointPair(Collection<PVector>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"fieldWarp(PShape, double, double, boolean)","url":"fieldWarp(processing.core.PShape,double,double,boolean)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"fieldWarp(PShape, double, double, double, boolean, int)","url":"fieldWarp(processing.core.PShape,double,double,double,boolean,int)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"findContainedPoints(PShape, Collection<PVector>)","url":"findContainedPoints(processing.core.PShape,java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"flatten(Collection<PShape>)","url":"flatten(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"flipHorizontal(PShape, double)","url":"flipHorizontal(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"flipHorizontal(PShape)","url":"flipHorizontal(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"flipVertical(PShape, double)","url":"flipVertical(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"flipVertical(PShape)","url":"flipVertical(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"fromPShape(PShape)","url":"fromPShape(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"fromPVector(List<PVector>)","url":"fromPVector(java.util.List)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"fromPVector(PVector...)","url":"fromPVector(processing.core.PVector...)"},{"p":"micycle.pgs","c":"PGS_CirclePacking","l":"frontChainPack(PShape, double, double)","url":"frontChainPack(processing.core.PShape,double,double)"},{"p":"micycle.pgs.commons","c":"FrontChainPacker","l":"FrontChainPacker(float, float, float, float, float, float)","url":"%3Cinit%3E(float,float,float,float,float,float)"},{"p":"micycle.pgs.commons","c":"FrontChainPacker","l":"FrontChainPacker(float, float, float, float)","url":"%3Cinit%3E(float,float,float,float)"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"gabrielFaces(IIncrementalTin, boolean)","url":"gabrielFaces(org.tinfour.common.IIncrementalTin,boolean)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"gaussian(double, double, double, int, long)","url":"gaussian(double,double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"gaussian(double, double, double, int)","url":"gaussian(double,double,double,int)"},{"p":"micycle.pgs.commons","c":"PoissonDistribution","l":"generate(double, double, double, double, double, int)","url":"generate(double,double,double,double,double,int)"},{"p":"micycle.pgs.commons","c":"RandomPolygon","l":"generateRandomConvexPolygon(int, double, double)","url":"generateRandomConvexPolygon(int,double,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"generateRandomGridPoints(PShape, int, boolean, double, long)","url":"generateRandomGridPoints(processing.core.PShape,int,boolean,double,long)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"generateRandomGridPoints(PShape, int, boolean, double)","url":"generateRandomGridPoints(processing.core.PShape,int,boolean,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"generateRandomPoints(PShape, int, long)","url":"generateRandomPoints(processing.core.PShape,int,long)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"generateRandomPoints(PShape, int)","url":"generateRandomPoints(processing.core.PShape,int)"},{"p":"micycle.pgs.commons","c":"GaussianLineSmoothing","l":"get(LineString, double, double)","url":"get(org.locationtech.jts.geom.LineString,double,double)"},{"p":"micycle.pgs.commons","c":"GaussianLineSmoothing","l":"get(LineString, double)","url":"get(org.locationtech.jts.geom.LineString,double)"},{"p":"micycle.pgs.commons","c":"MinimumBoundingEllipse","l":"getBoundingCoordinates(int)"},{"p":"micycle.pgs.commons","c":"MinimumBoundingEllipse","l":"getCenter()"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"getChildren(PShape)","url":"getChildren(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"DoyleSpiral","l":"getCircles()"},{"p":"micycle.pgs.commons","c":"FrontChainPacker","l":"getCircles()"},{"p":"micycle.pgs.commons","c":"RLFColoring","l":"getColoring()"},{"p":"micycle.pgs.commons","c":"PenroseTiling","l":"getEdges()"},{"p":"micycle.pgs.commons","c":"SeededRandomPointsInGridBuilder","l":"getGeometry()"},{"p":"micycle.pgs.commons","c":"MaximumInscribedRectangle","l":"getInscribedRectangle()"},{"p":"micycle.pgs.commons","c":"MinimumBoundingEllipse","l":"getMatrix()"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual","l":"getMesh()"},{"p":"micycle.pgs.commons","c":"PoissonDistribution","l":"getPoints()"},{"p":"micycle.pgs.commons","c":"SpiralQuadrangulation","l":"getQuadrangulationEdges()"},{"p":"micycle.pgs.commons","c":"MinimumBoundingTriangle","l":"getTriangle()"},{"p":"micycle.pgs.commons","c":"PenroseTiling","l":"getTriangles()"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"haltonLDS(double, double, double, double, int)","url":"haltonLDS(double,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"hammersleyLDS(double, double, double, double, int)","url":"hammersleyLDS(double,double,double,double,int)"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual.DualEdge","l":"hashCode()"},{"p":"micycle.pgs.commons","c":"PEdge","l":"hashCode()"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"height(PShape)","url":"height(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"hexagon(double, double, int, double)","url":"hexagon(double,double,int,double)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"hexGrid(double, double, double, double, double)","url":"hexGrid(double,double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"hexGrid(double, double, double, double, int)","url":"hexGrid(double,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_CirclePacking","l":"hexLatticePack(PShape, double)","url":"hexLatticePack(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"hexTiling(double, double, double, boolean)","url":"hexTiling(double,double,double,boolean)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"holes(PShape)","url":"holes(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"homotheticTransformation(PShape, PVector, double, double)","url":"homotheticTransformation(processing.core.PShape,processing.core.PVector,double,double)"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual","l":"IncrementalTinDual(IIncrementalTin)","url":"%3Cinit%3E(org.tinfour.common.IIncrementalTin)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"interpolate(PShape, PShape, double)","url":"interpolate(processing.core.PShape,processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"intersect(PShape, PShape)","url":"intersect(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"intersect(PShape, PShape)","url":"intersect(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"isConvex(PShape)","url":"isConvex(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"islamicTiling(double, double, double, double)","url":"islamicTiling(double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"isolines(Collection<PVector>, double, double, double, int)","url":"isolines(java.util.Collection,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"isolines(Collection<PVector>, double, double, double)","url":"isolines(java.util.Collection,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"isolines(PShape, PVector, double)","url":"isolines(processing.core.PShape,processing.core.PVector,double)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"isolinesFromGrid(double[][], double, double, double)","url":"isolinesFromGrid(double[][],double,double,double)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"isSimple(PShape)","url":"isSimple(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"LARGEST_DEGREE_FIRST"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"length(PShape)","url":"length(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"lineSegmentsIntersection(List<PVector>)","url":"lineSegmentsIntersection(java.util.List)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"maximumInscribedCircle(PShape, double)","url":"maximumInscribedCircle(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"maximumInscribedCircle(PShape, PVector)","url":"maximumInscribedCircle(processing.core.PShape,processing.core.PVector)"},{"p":"micycle.pgs","c":"PGS_CirclePacking","l":"maximumInscribedPack(PShape, int, double)","url":"maximumInscribedPack(processing.core.PShape,int,double)"},{"p":"micycle.pgs.commons","c":"MaximumInscribedRectangle","l":"MaximumInscribedRectangle(Geometry, double)","url":"%3Cinit%3E(org.locationtech.jts.geom.Geometry,double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"maximumInscribedRectangle(PShape, boolean)","url":"maximumInscribedRectangle(processing.core.PShape,boolean)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"medialAxis(PShape, double, double, double)","url":"medialAxis(processing.core.PShape,double,double,double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"minimumBoundingCircle(PShape)","url":"minimumBoundingCircle(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"MinimumBoundingEllipse","l":"MinimumBoundingEllipse(double[][], double)","url":"%3Cinit%3E(double[][],double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"minimumBoundingEllipse(PShape, double)","url":"minimumBoundingEllipse(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"minimumBoundingRectangle(PShape)","url":"minimumBoundingRectangle(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"MinimumBoundingTriangle","l":"MinimumBoundingTriangle(Geometry)","url":"%3Cinit%3E(org.locationtech.jts.geom.Geometry)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"minimumBoundingTriangle(PShape)","url":"minimumBoundingTriangle(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"minimumDiameter(PShape)","url":"minimumDiameter(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"minkDifference(PShape, PShape)","url":"minkDifference(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"minkSum(PShape, PShape)","url":"minkSum(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Contour.OffsetStyle","l":"MITER"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"nRooksLDS(double, double, double, double, int, long)","url":"nRooksLDS(double,double,double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"nRooksLDS(double, double, double, double, int)","url":"nRooksLDS(double,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"offsetCurvesInward(PShape, PGS_Contour.OffsetStyle, double)","url":"offsetCurvesInward(processing.core.PShape,micycle.pgs.PGS_Contour.OffsetStyle,double)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"offsetCurvesOutward(PShape, PGS_Contour.OffsetStyle, double, int)","url":"offsetCurvesOutward(processing.core.PShape,micycle.pgs.PGS_Contour.OffsetStyle,double,int)"},{"p":"micycle.pgs.commons","c":"FarthestPointPair","l":"other()"},{"p":"micycle.pgs","c":"PGS_Processing","l":"partition(PShape)","url":"partition(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"PEdge","l":"PEdge(double, double, double, double)","url":"%3Cinit%3E(double,double,double,double)"},{"p":"micycle.pgs.commons","c":"PEdge","l":"PEdge(PVector, PVector)","url":"%3Cinit%3E(processing.core.PVector,processing.core.PVector)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"penroseTiling(double, double, double, int)","url":"penroseTiling(double,double,double,int)"},{"p":"micycle.pgs.commons","c":"PenroseTiling","l":"PenroseTiling(double, double, double, int)","url":"%3Cinit%3E(double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"phyllotaxis(double, double, int, double, double)","url":"phyllotaxis(double,double,int,double,double)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"phyllotaxis(double, double, int, double)","url":"phyllotaxis(double,double,int,double)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"plasticJitteredLDS(double, double, double, double, int, long)","url":"plasticJitteredLDS(double,double,double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"plasticJitteredLDS(double, double, double, double, int)","url":"plasticJitteredLDS(double,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"plasticLDS(double, double, double, double, int)","url":"plasticLDS(double,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"pointOnExterior(PShape, double, double)","url":"pointOnExterior(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"pointsOnExterior(PShape, double, double)","url":"pointsOnExterior(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"pointsOnExterior(PShape, int, double)","url":"pointsOnExterior(processing.core.PShape,int,double)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"poisson(double, double, double, double, double, long)","url":"poisson(double,double,double,double,double,long)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"poisson(double, double, double, double, double)","url":"poisson(double,double,double,double,double)"},{"p":"micycle.pgs.commons","c":"PoissonDistribution","l":"PoissonDistribution()","url":"%3Cinit%3E()"},{"p":"micycle.pgs.commons","c":"PoissonDistribution","l":"PoissonDistribution(long)","url":"%3Cinit%3E(long)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"poissonTriangulation(PShape, double)","url":"poissonTriangulation(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Triangulation","l":"poissonTriangulationPoints(PShape, double)","url":"poissonTriangulationPoints(processing.core.PShape,double)"},{"p":"micycle.pgs.commons","c":"FastPolygonizer","l":"polygonize(Collection<PEdge>)","url":"polygonize(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"polygonizeLines(List<PVector>)","url":"polygonizeLines(java.util.List)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"PRESERVE_STYLE"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"prunePointsWithinDistance(List<PVector>, double)","url":"prunePointsWithinDistance(java.util.List,double)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"quadSubdivision(double, double, int, long)","url":"quadSubdivision(double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"quadSubdivision(double, double, int)","url":"quadSubdivision(double,double,int)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"radialWarp(PShape, double, double, boolean)","url":"radialWarp(processing.core.PShape,double,double,boolean)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"RANDOM"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"random(double, double, double, double, int, long)","url":"random(double,double,double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"random(double, double, double, double, int)","url":"random(double,double,double,double,int)"},{"p":"micycle.pgs.commons","c":"RectangularSubdivision","l":"RectangularSubdivision(double, double, int, long)","url":"%3Cinit%3E(double,double,int,long)"},{"p":"micycle.pgs.commons","c":"RectangularSubdivision","l":"RectangularSubdivision(double, double, long)","url":"%3Cinit%3E(double,double,long)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"rectSubdivsion(double, double, int, long)","url":"rectSubdivsion(double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"rectSubdivsion(double, double, int)","url":"rectSubdivsion(double,double,int)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"removeSmallHoles(PShape, double)","url":"removeSmallHoles(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"resize(PShape, double, double)","url":"resize(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"ring(double, double, double, double, double, int, long)","url":"ring(double,double,double,double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"ring(double, double, double, double, double, int)","url":"ring(double,double,double,double,double,int)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"RLF"},{"p":"micycle.pgs.commons","c":"RLFColoring","l":"RLFColoring(Graph<V, E>)","url":"%3Cinit%3E(org.jgrapht.Graph)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"rotate(PShape, PVector, double)","url":"rotate(processing.core.PShape,processing.core.PVector,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"rotateAroundCenter(PShape, double)","url":"rotateAroundCenter(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Contour.OffsetStyle","l":"ROUND"},{"p":"micycle.pgs.commons","c":"PEdge","l":"round()"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"round(PShape, double)","url":"round(processing.core.PShape,double)"},{"p":"micycle.pgs.commons","c":"CornerRounding","l":"round(PShape, double)","url":"round(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"roundVertexCoords(PShape)","url":"roundVertexCoords(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"scale(PShape, double, double)","url":"scale(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"scale(PShape, double)","url":"scale(processing.core.PShape,double)"},{"p":"micycle.pgs.commons","c":"SeededRandomPointsInGridBuilder","l":"SeededRandomPointsInGridBuilder(long, GeometryFactory)","url":"%3Cinit%3E(long,org.locationtech.jts.geom.GeometryFactory)"},{"p":"micycle.pgs.commons","c":"SeededRandomPointsInGridBuilder","l":"SeededRandomPointsInGridBuilder(long)","url":"%3Cinit%3E(long)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"setAllFillColor(PShape, int)","url":"setAllFillColor(processing.core.PShape,int)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"setAllStrokeColor(PShape, int, float)","url":"setAllStrokeColor(processing.core.PShape,int,float)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"setAllStrokeToFillColor(PShape)","url":"setAllStrokeToFillColor(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"SeededRandomPointsInGridBuilder","l":"setConstrainedToCircle(boolean)"},{"p":"micycle.pgs.commons","c":"SeededRandomPointsInGridBuilder","l":"setGutterFraction(double)"},{"p":"micycle.pgs.commons","c":"ShapeInterpolation","l":"ShapeInterpolation(Geometry, Geometry)","url":"%3Cinit%3E(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"micycle.pgs.commons","c":"ShapeInterpolation","l":"ShapeInterpolation(LinearRing, LinearRing)","url":"%3Cinit%3E(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.LinearRing)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"shapeIntersection(PShape, PShape)","url":"shapeIntersection(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"shear(PShape, double, double)","url":"shear(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"similarity(PShape, PShape)","url":"similarity(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"simplify(PShape, double)","url":"simplify(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"simplifyTopology(PShape, double)","url":"simplifyTopology(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"simplifyVW(PShape, double)","url":"simplifyVW(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"slice(PShape, PVector, PVector)","url":"slice(processing.core.PShape,processing.core.PVector,processing.core.PVector)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"SMALLEST_DEGREE_LAST"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"smooth(PShape, double)","url":"smooth(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Morphology","l":"smoothGaussian(PShape, double)","url":"smoothGaussian(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"snapHull(PShape, double)","url":"snapHull(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Optimisation","l":"solveApollonius(PVector, PVector, PVector, int, int, int)","url":"solveApollonius(processing.core.PVector,processing.core.PVector,processing.core.PVector,int,int,int)"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"spiralQuadrangulation(List<PVector>)","url":"spiralQuadrangulation(java.util.List)"},{"p":"micycle.pgs.commons","c":"SpiralQuadrangulation","l":"SpiralQuadrangulation(List<PVector>)","url":"%3Cinit%3E(java.util.List)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"split(PShape, int)","url":"split(processing.core.PShape,int)"},{"p":"micycle.pgs","c":"PGS_Processing","l":"split(PShape)","url":"split(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"splitQuadrangulation(IIncrementalTin)","url":"splitQuadrangulation(org.tinfour.common.IIncrementalTin)"},{"p":"micycle.pgs","c":"PGS_PointSet","l":"squareGrid(double, double, double, double, double)","url":"squareGrid(double,double,double,double,double)"},{"p":"micycle.pgs","c":"PGS_CirclePacking","l":"squareLatticePack(PShape, double)","url":"squareLatticePack(processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_CirclePacking","l":"stochasticPack(PShape, int, double, boolean)","url":"stochasticPack(processing.core.PShape,int,double,boolean)"},{"p":"micycle.pgs","c":"PGS_Contour","l":"straightSkeleton(PShape)","url":"straightSkeleton(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"subtract(PShape, PShape)","url":"subtract(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"symDifference(PShape, PShape)","url":"symDifference(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"toPointsPShape(Collection<PVector>)","url":"toPointsPShape(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"toPShape(Collection<Geometry>)","url":"toPShape(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"toPShape(Geometry)","url":"toPShape(org.locationtech.jts.geom.Geometry)"},{"p":"micycle.pgs","c":"PGS_Conversion","l":"toPVector(PShape)","url":"toPVector(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"PEdge","l":"toString()"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"touch(PShape, PShape)","url":"touch(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"touchScale(PShape, PShape, double)","url":"touchScale(processing.core.PShape,processing.core.PShape,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"translate(PShape, double, double)","url":"translate(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"translateTo(PShape, double, double)","url":"translateTo(processing.core.PShape,double,double)"},{"p":"micycle.pgs","c":"PGS_Transformation","l":"translateToOrigin(PShape)","url":"translateToOrigin(processing.core.PShape)"},{"p":"micycle.pgs.commons","c":"TriangleSubdivision","l":"TriangleSubdivision(double, double, int, long)","url":"%3Cinit%3E(double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"triangleSubdivsion(double, double, int, long)","url":"triangleSubdivsion(double,double,int,long)"},{"p":"micycle.pgs","c":"PGS_Tiling","l":"triangleSubdivsion(double, double, int)","url":"triangleSubdivsion(double,double,int)"},{"p":"micycle.pgs","c":"PGS_CirclePacking","l":"trinscribedPack(PShape, int, int)","url":"trinscribedPack(processing.core.PShape,int,int)"},{"p":"micycle.pgs.commons","c":"ShapeInterpolation","l":"tween(double)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"union(List<PShape>)","url":"union(java.util.List)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"union(PShape, PShape)","url":"union(processing.core.PShape,processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"union(PShape...)","url":"union(processing.core.PShape...)"},{"p":"micycle.pgs","c":"PGS_ShapeBoolean","l":"unionMesh(PShape)","url":"unionMesh(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Meshing","l":"urquhartFaces(IIncrementalTin, boolean)","url":"urquhartFaces(org.tinfour.common.IIncrementalTin,boolean)"},{"p":"micycle.pgs.commons","c":"Nullable","l":"value()"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"micycle.pgs","c":"PGS_Contour.OffsetStyle","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"micycle.pgs","c":"PGS_Coloring.ColoringAlgorithm","l":"values()"},{"p":"micycle.pgs","c":"PGS_Contour.OffsetStyle","l":"values()"},{"p":"micycle.pgs.commons","c":"IncrementalTinDual","l":"vertexDuals"},{"p":"micycle.pgs","c":"PGS_Voronoi","l":"voronoiCells(Collection<PVector>)","url":"voronoiCells(java.util.Collection)"},{"p":"micycle.pgs","c":"PGS_Voronoi","l":"voronoiCells(PShape)","url":"voronoiCells(processing.core.PShape)"},{"p":"micycle.pgs","c":"PGS_Voronoi","l":"voronoiCirclesDiagram(Collection<PVector>, int, boolean)","url":"voronoiCirclesDiagram(java.util.Collection,int,boolean)"},{"p":"micycle.pgs","c":"PGS_Voronoi","l":"voronoiDiagram(Collection<PVector>, boolean)","url":"voronoiDiagram(java.util.Collection,boolean)"},{"p":"micycle.pgs","c":"PGS_Voronoi","l":"voronoiDiagram(IncrementalTin)","url":"voronoiDiagram(org.tinfour.standard.IncrementalTin)"},{"p":"micycle.pgs","c":"PGS_Voronoi","l":"voronoiDiagram(PShape, boolean)","url":"voronoiDiagram(processing.core.PShape,boolean)"},{"p":"micycle.pgs","c":"PGS_ShapePredicates","l":"width(PShape)","url":"width(processing.core.PShape)"}]